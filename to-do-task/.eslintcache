[{"C:\\Users\\user\\Desktop\\to-do\\to-do-app\\to-do-task\\src\\index.js":"1","C:\\Users\\user\\Desktop\\to-do\\to-do-app\\to-do-task\\src\\App.js":"2","C:\\Users\\user\\Desktop\\to-do\\to-do-app\\to-do-task\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Desktop\\to-do\\to-do-app\\to-do-task\\src\\pages\\home\\Home.js":"4","C:\\Users\\user\\Desktop\\to-do\\to-do-app\\to-do-task\\src\\components\\layout\\Layout.js":"5","C:\\Users\\user\\Desktop\\to-do\\to-do-app\\to-do-task\\src\\components\\to-do-container\\ToDoContainer.js":"6","C:\\Users\\user\\Desktop\\to-do\\to-do-app\\to-do-task\\src\\components\\add-task-form\\AddTaskForm.js":"7","C:\\Users\\user\\Desktop\\to-do\\to-do-app\\to-do-task\\src\\hooks\\useAsync.js":"8","C:\\Users\\user\\Desktop\\to-do\\to-do-app\\to-do-task\\src\\hooks\\use-form.js":"9","C:\\Users\\user\\Desktop\\to-do\\to-do-app\\to-do-task\\src\\components\\to-do-card\\ToDoCard.js":"10","C:\\Users\\user\\Desktop\\to-do\\to-do-app\\to-do-task\\src\\components\\add-task-form\\AddTaskFormik.js":"11","C:\\Users\\user\\Desktop\\to-do\\to-do-app\\to-do-task\\src\\components\\charts\\BarChart.js":"12","C:\\Users\\user\\Desktop\\to-do\\to-do-app\\to-do-task\\src\\components\\charts\\PieChart.js":"13","C:\\Users\\user\\Desktop\\to-do\\to-do-app\\to-do-task\\src\\components\\TodoContext.js":"14"},{"size":849,"mtime":1610631930852,"results":"15","hashOfConfig":"16"},{"size":1059,"mtime":1610958133729,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1610346486052,"results":"18","hashOfConfig":"16"},{"size":5482,"mtime":1610957897593,"results":"19","hashOfConfig":"16"},{"size":939,"mtime":1610612887340,"results":"20","hashOfConfig":"16"},{"size":1698,"mtime":1610346487876,"results":"21","hashOfConfig":"16"},{"size":2810,"mtime":1610356142677,"results":"22","hashOfConfig":"16"},{"size":2212,"mtime":1610444226547,"results":"23","hashOfConfig":"16"},{"size":3404,"mtime":1610351358300,"results":"24","hashOfConfig":"16"},{"size":930,"mtime":1610346487558,"results":"25","hashOfConfig":"16"},{"size":2753,"mtime":1610356269934,"results":"26","hashOfConfig":"16"},{"size":3387,"mtime":1610958208099,"results":"27","hashOfConfig":"16"},{"size":3158,"mtime":1610958252672,"results":"28","hashOfConfig":"16"},{"size":200,"mtime":1610889741878,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"t7km4a",{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\Desktop\\to-do\\to-do-app\\to-do-task\\src\\index.js",[],["62","63"],"C:\\Users\\user\\Desktop\\to-do\\to-do-app\\to-do-task\\src\\App.js",["64","65"],"C:\\Users\\user\\Desktop\\to-do\\to-do-app\\to-do-task\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\to-do\\to-do-app\\to-do-task\\src\\pages\\home\\Home.js",["66","67","68","69"],"C:\\Users\\user\\Desktop\\to-do\\to-do-app\\to-do-task\\src\\components\\layout\\Layout.js",["70"],"import { Flex, ListItem, UnorderedList, Link, Button } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport \"./style.css\";\nimport { Link as ReactLink, NavLink } from \"react-router-dom\";\n\nexport default function Layout({ children }) {\n  return (\n    <Flex direction=\"column\">\n      <Flex justify=\"space-between\" border=\"2px solid black\">\n        <UnorderedList styleType=\"none\">\n          <ListItem px=\"30px\" py=\"6px\" border=\"2px solid black\">\n            <Link as={NavLink} to=\"/\">\n              LOGO\n            </Link>\n          </ListItem>\n          <ListItem>My To Do App</ListItem>\n          <ListItem>\n            <Link as={NavLink} to=\"/barchart\">\n              Bar Chart\n            </Link>\n          </ListItem>\n          <ListItem>\n            <Link as={ReactLink} to=\"/piechart\">\n              Pie Chart\n            </Link>\n          </ListItem>\n        </UnorderedList>\n      </Flex>\n\n      {children}\n    </Flex>\n  );\n}\n","C:\\Users\\user\\Desktop\\to-do\\to-do-app\\to-do-task\\src\\components\\to-do-container\\ToDoContainer.js",[],"C:\\Users\\user\\Desktop\\to-do\\to-do-app\\to-do-task\\src\\components\\add-task-form\\AddTaskForm.js",["71","72"],"import {\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  Select,\n  Text,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { useForm } from \"../../hooks/use-form\";\n\nconst initialState = {\n  title: \"\",\n  severity: \"Normal\",\n  progress: \"to_do\",\n  date: new Date().toDateString(),\n  description: \"\",\n};\n\nexport default function AddTaskForm({\n  onSubmitt,\n  isSubmitting,\n  isSuccess,\n  currentState,\n  buttonName,\n}) {\n  const [todo, setTodo] = React.useState(currentState || initialState);\n\n  React.useEffect(() => {\n    isSuccess && setInitialState();\n  }, [isSuccess]);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    handleSubmit();\n  };\n\n  const onChange = (e) => {\n    handleChange(e);\n  };\n\n  const onBlur = (e) => {\n    handleBlur(e);\n  };\n\n  const titleValidation = (title) => {\n    if (title.trim() === \"\") {\n      return \"Title is required\";\n    }\n    if (title.trim().length < 6 || title.trim().length > 10) {\n      return \"Title needs to be between six to ten characters\";\n    }\n    return null;\n  };\n\n  const descriptionValidation = (description) => {\n    if (description.trim() === \"\") {\n      return \"Description is required\";\n    }\n    if (description.trim().length < 8) {\n      return \"Description needs to be at least eight characters\";\n    }\n    return null;\n  };\n\n  const validationScheme = {\n    title: titleValidation,\n    description: descriptionValidation,\n  };\n\n  const {\n    values,\n    errors,\n    touched,\n    handleSubmit,\n    handleBlur,\n    handleChange,\n    setInitialState\n  } = useForm(todo, validationScheme, onSubmitt);\n\n  return (\n    <form onSubmit={onSubmit} autoComplete=\"off\">\n      <FormControl>\n        <FormLabel pt=\"10px\">Name</FormLabel>\n        <Input\n          value={values.title}\n          bg=\"gray.50\"\n          name=\"title\"\n          onChange={onChange}\n          onBlur={onBlur}\n          // isRequired\n        />\n        <Text color=\"red.500\">{touched.title && errors.title}</Text>\n      </FormControl>\n      <FormControl>\n        <FormLabel pt=\"10px\">Description</FormLabel>\n        <Input\n          value={values.description}\n          bg=\"gray.50\"\n          name=\"description\"\n          onChange={onChange}\n          onBlur={onBlur}\n          // isRequired\n        />\n        <Text color=\"red.500\">{touched.description && errors.description}</Text>\n      </FormControl>\n      <FormControl>\n        <FormLabel pt=\"10px\">Severity</FormLabel>\n        <Select\n          value={values.severity}\n          bg=\"gray.50\"\n          name=\"severity\"\n          onChange={onChange}\n        >\n          <option>Normal</option>\n          <option>Important</option>\n          <option>Urgent</option>\n        </Select>\n      </FormControl>\n\n      <Button type=\"submit\" disabled={isSubmitting}>\n        {buttonName}\n      </Button>\n    </form>\n  );\n}\n","C:\\Users\\user\\Desktop\\to-do\\to-do-app\\to-do-task\\src\\hooks\\useAsync.js",[],"C:\\Users\\user\\Desktop\\to-do\\to-do-app\\to-do-task\\src\\hooks\\use-form.js",[],"C:\\Users\\user\\Desktop\\to-do\\to-do-app\\to-do-task\\src\\components\\to-do-card\\ToDoCard.js",[],"C:\\Users\\user\\Desktop\\to-do\\to-do-app\\to-do-task\\src\\components\\add-task-form\\AddTaskFormik.js",["73"],"import {\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  Select,\n  Text,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst initialState = {\n  title: \"\",\n  severity: \"Normal\",\n  progress: \"to_do\",\n  date: new Date().toDateString(),\n  description: \"\",\n};\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string()\n    .min(6, \"Too Short! Title needs to be between six to ten characters\")\n    .max(10, \"Too Long! Title needs to be between six to ten characters\")\n    .required(\"Title is required\"),\n  description: Yup.string()\n    .min(8, \"Too Short! Description needs to be at least eight characters\")\n    .max(50, \"Too Long!\")\n    .required(\"Description is required\"),\n});\n\nexport default function AddTaskFormik({\n  onSubmitt,\n  // isSubmitting,\n  isSuccess,\n  currentState,\n  buttonName,\n}) {\n  const [todo, setTodo] = React.useState(currentState || initialState);\n\n  return (\n    <Formik\n      initialValues={todo}\n      validationSchema={validationSchema}\n      onSubmit={(values, {resetForm, setSubmitting}) => {\n        onSubmitt(values);\n        setSubmitting(false);\n        resetForm();\n      }}\n    >\n      {({ isSubmitting }) => (\n        <Form autoComplete=\"off\">\n          <Field name=\"title\">\n            {({ field, form }) => (\n              <FormControl>\n                <FormLabel pt=\"10px\">Name</FormLabel>\n                <Input {...field} bg=\"gray.50\" name=\"title\" />\n                {form.errors.title && form.touched.title ? (\n                  <Text color=\"red.500\">{form.errors.title}</Text>\n                ) : null}\n              </FormControl>\n            )}\n          </Field>\n          <Field name=\"description\">\n            {({ field, form }) => (\n              <FormControl>\n                <FormLabel pt=\"10px\">Description</FormLabel>\n                <Input {...field} bg=\"gray.50\" name=\"description\" />\n                {form.errors.description && form.touched.description ? (\n                  <Text color=\"red.500\">{form.errors.description}</Text>\n                ) : null}\n              </FormControl>\n            )}\n          </Field>\n          <Field name=\"severity\">\n            {({ field, form }) => (\n              <FormControl>\n                <FormLabel pt=\"10px\">Severity</FormLabel>\n                <Select {...field} bg=\"gray.50\" name=\"severity\">\n                  <option>Normal</option>\n                  <option>Important</option>\n                  <option>Urgent</option>\n                </Select>\n              </FormControl>\n            )}\n          </Field>\n\n          <Button type=\"submit\" disabled={isSubmitting}>\n            {buttonName}\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n","C:\\Users\\user\\Desktop\\to-do\\to-do-app\\to-do-task\\src\\components\\charts\\BarChart.js",["74","75"],"C:\\Users\\user\\Desktop\\to-do\\to-do-app\\to-do-task\\src\\components\\charts\\PieChart.js",[],"C:\\Users\\user\\Desktop\\to-do\\to-do-app\\to-do-task\\src\\components\\TodoContext.js",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":13,"column":32,"nodeType":"82","messageId":"83","endLine":13,"endColumn":42},{"ruleId":"80","severity":1,"message":"84","line":13,"column":44,"nodeType":"82","messageId":"83","endLine":13,"endColumn":51},{"ruleId":"80","severity":1,"message":"85","line":15,"column":8,"nodeType":"82","messageId":"83","endLine":15,"endColumn":19},{"ruleId":"80","severity":1,"message":"86","line":18,"column":10,"nodeType":"82","messageId":"83","endLine":18,"endColumn":24},{"ruleId":"80","severity":1,"message":"87","line":42,"column":12,"nodeType":"82","messageId":"83","endLine":42,"endColumn":25},{"ruleId":"80","severity":1,"message":"88","line":68,"column":12,"nodeType":"82","messageId":"83","endLine":68,"endColumn":23},{"ruleId":"80","severity":1,"message":"89","line":1,"column":47,"nodeType":"82","messageId":"83","endLine":1,"endColumn":53},{"ruleId":"80","severity":1,"message":"90","line":27,"column":16,"nodeType":"82","messageId":"83","endLine":27,"endColumn":23},{"ruleId":"91","severity":1,"message":"92","line":31,"column":6,"nodeType":"93","endLine":31,"endColumn":17,"suggestions":"94"},{"ruleId":"80","severity":1,"message":"90","line":39,"column":16,"nodeType":"82","messageId":"83","endLine":39,"endColumn":23},{"ruleId":"95","severity":1,"message":"96","line":12,"column":21,"nodeType":"97","messageId":"98","endLine":12,"endColumn":23},{"ruleId":"95","severity":1,"message":"99","line":19,"column":24,"nodeType":"97","messageId":"98","endLine":19,"endColumn":26},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'isFetching' is assigned a value but never used.","Identifier","unusedVar","'refetch' is assigned a value but never used.","'AddTaskForm' is defined but never used.","'useBetterAsync' is defined but never used.","'mutationError' is assigned a value but never used.","'updateError' is assigned a value but never used.","'Button' is defined but never used.","'setTodo' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'setInitialState'. Either include it or remove the dependency array.","ArrayExpression",["102"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.filter() expects a return value from arrow function.","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},"Update the dependencies array to be: [isSuccess, setInitialState]",{"range":"105","text":"106"},[569,580],"[isSuccess, setInitialState]"]